{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red14\green110\blue109;\red255\green255\blue254;\red0\green0\blue0;
\red154\green154\blue154;\red191\green28\blue37;\red0\green0\blue255;\red19\green120\blue72;\red144\green1\blue18;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c50196;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c66667\c66667\c66667;\cssrgb\c80392\c19216\c19216;\cssrgb\c0\c0\c100000;\cssrgb\c3529\c53333\c35294;\cssrgb\c63922\c8235\c8235;
\csgray\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Node\cf4 \strokec4  \cf2 \strokec2 JS\cf4 \strokec4  \cf2 \strokec2 Cheat\cf4 \strokec4  \cf2 \strokec2 Sheet\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 //CommonJS\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Node\cf4 \strokec4  doesn\cf6 \strokec6 \'92\cf4 \strokec4 t use es6, it uses commonJS so you need to use require as opposed to \cf7 \strokec7 import\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 //Path\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  path = require (\cf6 \strokec6 \'91\cf4 \strokec4 path\cf6 \strokec6 \'92\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 // Base file name\cf4 \cb1 \strokec4 \
\cb3 console.log(path.basename(__filename));\cb1 \
\
\cf5 \cb3 \strokec5 // Directory name\cf4 \cb1 \strokec4 \
\cb3 console.log(path.dirname(__filename));\cb1 \
\
\cf5 \cb3 \strokec5 // File extension\cf4 \cb1 \strokec4 \
\cb3 console.log(path.extname(__filename));\cb1 \
\
\cf5 \cb3 \strokec5 // Create path object\cf4 \cb1 \strokec4 \
\cb3 console.log(path.parse(__filename));\cb1 \
\
\cf5 \cb3 \strokec5 // Concatenate paths\cf4 \cb1 \strokec4 \
\cb3 console.log(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.html\cf6 \strokec6 \'92\cf4 \strokec4 ))\cb1 \
\
\cf5 \cb3 \strokec5 //FS\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  fs = require (\cf6 \strokec6 \'91\cf4 \strokec4 fs\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  path = require (\cf6 \strokec6 \'91\cf4 \strokec4 path\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Create folder (mkdir(path, options, callback)\cf4 \cb1 \strokec4 \
\cb3 fs.mkdir(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 ), \{\}, err => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(\cf6 \strokec6 \'91\cf2 \strokec2 Folder\cf4 \strokec4  create\cf6 \strokec6 \'85\'92\cf4 \strokec4 );\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 \strokec5 // Create and write to file (writeFile overwrites anything written in file)\cf4 \cb1 \strokec4 \
\cb3 fs.writeFile(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), \cf6 \strokec6 \'91\cf2 \strokec2 Hello\cf4 \strokec4  \cf2 \strokec2 World\cf6 \strokec6 \'92\cf4 \strokec4 , err => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(\cf6 \strokec6 \'91\cf2 \strokec2 File\cf4 \strokec4  written to\cf6 \strokec6 \'85\'92\cf4 \strokec4 );\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 \strokec5 // Create and write to file then append more text\cf4 \cb1 \strokec4 \
\cb3 fs.writeFile(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), \cf6 \strokec6 \'91\cf2 \strokec2 Hello\cf4 \strokec4  \cf2 \strokec2 World\cf6 \strokec6 \'92\cf4 \strokec4 , err => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(\cf6 \strokec6 \'91\cf2 \strokec2 File\cf4 \strokec4  written to\cf6 \strokec6 \'85\'92\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 //Append file\cf4 \cb1 \strokec4 \
\cb3     fs.appendFile(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), \cf6 \strokec6 \'91\cf2 \strokec2 More\cf4 \strokec4  text added\cf6 \strokec6 \'92\cf4 \strokec4 , err => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(\cf6 \strokec6 \'91\cf2 \strokec2 File\cf4 \strokec4  written to\cf6 \strokec6 \'85\'92\cf4 \strokec4 );\cb1 \
\cb3 \});\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 \strokec5 // Read file \cf4 \cb1 \strokec4 \
\cb3 fs.readFile(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), \cf6 \strokec6 \'91\cf4 \strokec4 utf8\cf6 \strokec6 \'92\cf4 \strokec4 , (err, data) => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(data);\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 \strokec5 // Rename file \cf4 \cb1 \strokec4 \
\cb3 fs.rename(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 hello.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), (path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 /test\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 newName.txt\cf6 \strokec6 \'92\cf4 \strokec4 ), err => \{\cb1 \
\cb3     \cf2 \strokec2 If\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3     console.log(\cf6 \strokec6 \'91\cf2 \strokec2 File\cf4 \strokec4  renamed\cf6 \strokec6 \'85\'92\cf4 \strokec4 );\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 \strokec5 // Operating System (OS)\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  os = require(\cf6 \strokec6 \'91\cf4 \strokec4 os\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Platform\cf4 \cb1 \strokec4 \
\cb3 console.log(os.platform());\cb1 \
\
\cf5 \cb3 \strokec5 // CPU Arch\cf4 \cb1 \strokec4 \
\cb3 console.log(os.arch());\cb1 \
\
\cf5 \cb3 \strokec5 // CPU Core Info\cf4 \cb1 \strokec4 \
\cb3 console.log(os.cpus());\cb1 \
\
\cf5 \cb3 \strokec5 // Free memory\cf4 \cb1 \strokec4 \
\cb3 console.log(os.freemem());\cb1 \
\
\cf5 \cb3 \strokec5 // Total memory\cf4 \cb1 \strokec4 \
\cb3 console.log(os.totalmem());\cb1 \
\
\cf5 \cb3 \strokec5 // Home dir\cf4 \cb1 \strokec4 \
\cb3 console.log(os.homedir());\cb1 \
\
\cf5 \cb3 \strokec5 // Uptime\cf4 \cb1 \strokec4 \
\cb3 console.log(os.uptime());\cb1 \
\
\cf5 \cb3 \strokec5 // URL\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  url = require(\cf6 \strokec6 \'91\cf4 \strokec4 url\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  myUrl = \cf7 \strokec7 new\cf4 \strokec4  \cf2 \strokec2 URL\cf4 \strokec4 (\cf6 \strokec6 \'91\cf4 \strokec4 http://mywebsite.com/hello.html?id=\cf8 \strokec8 100\cf4 \strokec4 &status=active\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Serialized URL\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.href);\cb1 \
\
\cf5 \cb3 \strokec5 // Host (root domain)\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.host);\cb1 \
\
\cf5 \cb3 \strokec5 // Hostname (doesn\'92t include ports)\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.hostname);\cb1 \
\
\cf5 \cb3 \strokec5 // Pathname\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.pathname);\cb1 \
\
\cf5 \cb3 \strokec5 // Serialized query\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.search);\cb1 \
\
\cf5 \cb3 \strokec5 // Params object\cf4 \cb1 \strokec4 \
\cb3 console.log(myUrl.searchParams);\cb1 \
\
\cf5 \cb3 \strokec5 // Add param\cf4 \cb1 \strokec4 \
\cb3 myUrl.searchParams.append(\cf6 \strokec6 \'91\cf4 \strokec4 abc\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf8 \strokec8 123\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cb3 console.log(myUrl.searchParams);\cb1 \
\
\cf5 \cb3 \strokec5 // Loop through params\cf4 \cb1 \strokec4 \
\cb3 myUrl.searchParams.forEach((value, name) console.log(\cf9 \strokec9 `\cf4 \strokec4 $\{name\}\cf9 \strokec9 : \cf4 \strokec4 $\{value\}\cf9 \strokec9 `\cf4 \strokec4 ));\cb1 \
\
\cf5 \cb3 \strokec5 //Event Emitter\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf2 \strokec2 EventEmitter\cf4 \strokec4  = require(\cf6 \strokec6 \'91\cf4 \strokec4 events\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Create class\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 class\cf4 \strokec4  \cf2 \strokec2 MyEmitter\cf4 \strokec4  \cf7 \strokec7 extends\cf4 \strokec4  \cf2 \strokec2 EventEmitter\cf4 \strokec4  \{ \}\cb1 \
\
\cf5 \cb3 \strokec5 // Init object\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  myEmitter = \cf7 \strokec7 new\cf4 \strokec4  \cf2 \strokec2 MyEmitter\cf4 \strokec4 ();\cb1 \
\
\cf5 \cb3 \strokec5 // Event listener\cf4 \cb1 \strokec4 \
\cb3 myEmitter.on(\cf6 \strokec6 \'91\cf4 \strokec4 event\cf6 \strokec6 \'92\cf4 \strokec4 , () => console.log(\cf6 \strokec6 \'91\cf2 \strokec2 Event\cf4 \strokec4  \cf2 \strokec2 Fired\cf4 \strokec4 !\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Init event\cf4 \cb1 \strokec4 \
\cb3 myEmitter.emit(\cf6 \strokec6 \'91\cf4 \strokec4 event\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Real example of EventEmitter\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf2 \strokec2 EventEmitter\cf4 \strokec4  = require(\cf6 \strokec6 \'91\cf4 \strokec4 events\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  uuid = require(\cf6 \strokec6 \'91\cf4 \strokec4 uuid\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf7 \cb3 \strokec7 class\cf4 \strokec4  \cf2 \strokec2 Logger\cf4 \strokec4  \cf7 \strokec7 extends\cf4 \strokec4  \cf2 \strokec2 EventEmitter\cf4 \strokec4  \{\cb1 \
\cb3     log(msg) \{\cb1 \
\cb3       \cf5 \strokec5 // Call event\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 this\cf4 \strokec4 .emit(\cf6 \strokec6 \'91\cf4 \strokec4 message\cf6 \strokec6 \'92\cf4 \strokec4 , \{ id: uuid.v4(), msg \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\cb3 module.exports = \cf2 \strokec2 Logger\cf4 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 // in index.js\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf2 \strokec2 Logger\cf4 \strokec4  = require(\cf6 \strokec6 \'91\cf4 \strokec4 ./logger\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  logger = \cf7 \strokec7 new\cf4 \strokec4  \cf2 \strokec2 Logger\cf4 \strokec4 ();\cb1 \
\cb3 logger.on(\cf6 \strokec6 \'91\cf4 \strokec4 message\cf6 \strokec6 \'92\cf4 \strokec4 , data => console.log(\cf6 \strokec6 \'91\cf2 \strokec2 Called\cf4 \strokec4  \cf2 \strokec2 Listener\cf6 \strokec6 \'92\cf4 \strokec4 , data));\cb1 \
\cb3 logger.log(\cf6 \strokec6 \'91\cf2 \strokec2 Hello\cf4 \strokec4  \cf2 \strokec2 World\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Create simple server\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  http = require(\cf6 \strokec6 \'91\cf4 \strokec4 http\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 // Create server object\cf4 \cb1 \strokec4 \
\cb3 http.createServer((req, res) => \{\cb1 \
\cb3     \cf5 \strokec5 // Write response\cf4 \cb1 \strokec4 \
\cb3     res.write(\cf6 \strokec6 \'91\cf2 \strokec2 Hello\cf4 \strokec4  \cf2 \strokec2 World\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cb3     res.end();\cb1 \
\cb3 \}).listen(\cf8 \strokec8 5000\cf4 \strokec4 , () => console.log(\cf6 \strokec6 \'91\cf2 \strokec2 Server\cf4 \strokec4  running\cf6 \strokec6 \'85\'92\cf4 \strokec4 ));\cb1 \
\
\cf5 \cb3 \strokec5 // Create real server\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  http = require(\cf6 \strokec6 \'91\cf4 \strokec4 http\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  path = require(\cf6 \strokec6 \'91\cf4 \strokec4 path\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  fs = require(\cf6 \strokec6 \'91\cf4 \strokec4 fs\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf7 \cb3 \strokec7 const\cf4 \strokec4  server = http.createServer((req, res) => \{\cb1 \
\cb3     \cf7 \strokec7 if\cf4 \strokec4  (req.url === \cf6 \strokec6 \'91\cf4 \strokec4 /\cf6 \strokec6 \'91\cf4 \strokec4 ) \{\cb1 \
\cb3       fs.readFile(\cb1 \
\cb3 \'a0\'a0path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 public\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 index.html\cf6 \strokec6 \'92\cf4 \strokec4 ),\cb1 \
\cb3 \'a0\'a0(err, content) => \{\cb1 \
\cb3 \'a0\'a0  \cf7 \strokec7 if\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3 \'a0\'a0  res.writeHead(\cf8 \strokec8 200\cf4 \strokec4 , \{ \cf6 \strokec6 \'91\cf2 \strokec2 Content\cf4 \strokec4 -\cf2 \strokec2 Type\cf6 \strokec6 \'92\cf4 \strokec4 : \cf6 \strokec6 \'91\cf4 \strokec4 text/html\cf6 \strokec6 \'92\cf4 \strokec4  \});\cb1 \
\cb3 \'a0\'a0  res.end(content);\cb1 \
\cb3 \'a0\'a0\}\cb1 \
\cb3       );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 if\cf4 \strokec4  (req.url === \cf6 \strokec6 \'91\cf4 \strokec4 /about\cf6 \strokec6 \'91\cf4 \strokec4 ) \{\cb1 \
\cb3       fs.readFile(\cb1 \
\cb3 \'a0\'a0path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 public\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf4 \strokec4 about\cf6 \strokec6 \'92\cf4 \strokec4 ),\cb1 \
\cb3 \'a0\'a0(err, content) => \{\cb1 \
\cb3 \'a0\'a0  \cf7 \strokec7 if\cf4 \strokec4  (err) \cf7 \strokec7 throw\cf4 \strokec4  err;\cb1 \
\cb3 \'a0\'a0  res.writeHead(\cf8 \strokec8 200\cf4 \strokec4 , \{ \cf6 \strokec6 \'91\cf2 \strokec2 Content\cf4 \strokec4 -\cf2 \strokec2 Type\cf6 \strokec6 \'92\cf4 \strokec4 : \cf6 \strokec6 \'91\cf4 \strokec4 text/html\cf6 \strokec6 \'92\cf4 \strokec4  \});\cb1 \
\cb3 \'a0\'a0  res.end(content);\cb1 \
\cb3 \'a0\'a0\}\cb1 \
\cb3       );\cb1 \
\cb3     \}\cb1 \
\
\cf5 \cb3 \strokec5 // Serve JSON data instead of HTML\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 if\cf4 \strokec4  (req.url === \cf6 \strokec6 \'91\cf4 \strokec4 /api/users\cf6 \strokec6 \'91\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf7 \strokec7 const\cf4 \strokec4  users = [\cb1 \
\cb3 \'a0\'a0\{ name: \cf6 \strokec6 \'91\cf2 \strokec2 Bob\cf4 \strokec4  \cf2 \strokec2 Smith\cf6 \strokec6 \'92\cf4 \strokec4 , age: \cf8 \strokec8 40\cf4 \strokec4  \},\cb1 \
\cb3            \{ name: \cf6 \strokec6 \'91\cf2 \strokec2 John\cf4 \strokec4  \cf2 \strokec2 Doe\cf6 \strokec6 \'92\cf4 \strokec4 , age: \cf8 \strokec8 30\cf4 \strokec4  \}\cb1 \
\cb3       ];\cb1 \
\cb3 \'a0\'a0res.writeHead(\cf8 \strokec8 200\cf4 \strokec4 , \{ \cf6 \strokec6 \'91\cf2 \strokec2 Content\cf4 \strokec4 -\cf2 \strokec2 Type\cf6 \strokec6 \'92\cf4 \strokec4 : \cf6 \strokec6 \'91\cf4 \strokec4 application/json\cf6 \strokec6 \'92\cf4 \strokec4  \});\cb1 \
\cb3 \'a0\'a0res.end(\cf2 \strokec2 JSON\cf4 \strokec4 .stringify(users));\cb1 \
\cb3     \}\cb1 \
\cb3 \});\cb1 \
\
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf2 \strokec2 PORT\cf4 \strokec4  = process.env.\cf2 \strokec2 PORT\cf4 \strokec4  || \cf8 \strokec8 5000\cf4 \strokec4 ;\cb1 \
\
\cb3 server.listen(\cf2 \strokec2 PORT\cf4 \strokec4 , () => console.log(\cf9 \strokec9 `Server running on port \cf4 \strokec4 $\{\cf2 \strokec2 PORT\cf4 \strokec4 \}\cf9 \strokec9 `\cf4 \strokec4 ));\cb1 \
\
\cf5 \cb3 \strokec5 // Create dynamic server\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  http = require(\cf6 \strokec6 \'91\cf4 \strokec4 http\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  path = require(\cf6 \strokec6 \'91\cf4 \strokec4 path\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cf7 \cb3 \strokec7 const\cf4 \strokec4  fs = require(\cf6 \strokec6 \'91\cf4 \strokec4 fs\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\
\cf7 \cb3 \strokec7 const\cf4 \strokec4  server = http.createServer((req, res) => \{\cb1 \
\cf5 \cb3 \strokec5 // Build file path\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 let\cf4 \strokec4  filePath = path.join(\cb1 \
\cb3   __dirname, \cb1 \
\cb3   \cf6 \strokec6 \'91\cf4 \strokec4 public\cf6 \strokec6 \'92\cf4 \strokec4 , \cb1 \
\cb3   req.url === \cf6 \strokec6 \'91\cf4 \strokec4 /\cf6 \strokec6 \'91\cf4 \strokec4  ? \cf6 \strokec6 \'91\cf4 \strokec4 index.html\cf6 \strokec6 \'92\cf4 \strokec4  : \cf6 \strokec6 \'91\cf4 \strokec4 req.url\cf6 \strokec6 \'92\cf4 \cb1 \strokec4 \
\cb3 );\cb1 \
\cf5 \cb3 \strokec5 // Extension of file\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 let\cf4 \strokec4  extreme = path.extname(filePath);\cb1 \
\
\cf5 \cb3 \strokec5 //Initial content type\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 let\cf4 \strokec4  contentType = \cf6 \strokec6 \'91\cf4 \strokec4 text/html\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 //Check ext and set content type\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 switch\cf4 \strokec4 (extname) \{\cb1 \
\cb3   \cf7 \strokec7 case\cf4 \strokec4  \cf6 \strokec6 \'91\cf4 \strokec4 .js\cf6 \strokec6 \'92\cf4 \strokec4 :\cb1 \
\cb3     contentType = \cf6 \strokec6 \'91\cf4 \strokec4 text/javascript\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 case\cf4 \strokec4  \cf6 \strokec6 \'91\cf4 \strokec4 .css\cf6 \strokec6 \'92\cf4 \strokec4 :\cb1 \
\cb3     contentType = \cf6 \strokec6 \'91\cf4 \strokec4 text/css\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 case\cf4 \strokec4  \cf6 \strokec6 \'91\cf4 \strokec4 .json\cf6 \strokec6 \'92\cf4 \strokec4 :\cb1 \
\cb3     contentType = \cf6 \strokec6 \'91\cf4 \strokec4 application/json\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 case\cf4 \strokec4  \cf6 \strokec6 \'91\cf4 \strokec4 .png\cf6 \strokec6 \'92\cf4 \strokec4 :\cb1 \
\cb3     contentType = \cf6 \strokec6 \'91\cf4 \strokec4 image/png\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 case\cf4 \strokec4  \cf6 \strokec6 \'91\cf4 \strokec4 .jpg\cf6 \strokec6 \'92\cf4 \strokec4 :\cb1 \
\cb3     contentType = \cf6 \strokec6 \'91\cf4 \strokec4 image/jpg\cf6 \strokec6 \'92\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf5 \cb3 \strokec5 // Read File\cf4 \cb1 \strokec4 \
\cb3   fs.readFile(filePath, (err, content) => \{\cb1 \
\cb3     \cf7 \strokec7 if\cf4 \strokec4  (err) \{\cb1 \
\cb3       \cf7 \strokec7 if\cf4 \strokec4 (err.code == \cf6 \strokec6 \'91\cf2 \strokec2 ENOENT\cf6 \strokec6 \'92\cf4 \strokec4 ) \{\cb1 \
\cb3 \'a0\'a0\cf5 \strokec5 // Page not found\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0fs.readFile(path.join(__dirname, \cf6 \strokec6 \'91\cf4 \strokec4 public\cf6 \strokec6 \'92\cf4 \strokec4 , \cf6 \strokec6 \'91\cf8 \strokec8 404\cf4 \strokec4 .html\cf6 \strokec6 \'92\cf4 \strokec4 ), \cb1 \
\cb3 \'a0\'a0(err, content) => \{\cb1 \
\cb3 \'a0\'a0  res.writeHead(\cf8 \strokec8 200\cf4 \strokec4 , \{ \cf6 \strokec6 \'91\cf2 \strokec2 Content\cf4 \strokec4 -\cf2 \strokec2 Type\cf6 \strokec6 \'92\cf4 \strokec4 : \cf6 \strokec6 \'91\cf4 \strokec4 text/html\cf6 \strokec6 \'92\cf4 \strokec4  \});\cb1 \
\cb3 \'a0\'a0  res.end(content, \cf6 \strokec6 \'91\cf4 \strokec4 utf8\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cb3 \'a0\'a0\})\cb1 \
\cb3 \'a0\'a0\} \cf7 \strokec7 else\cf4 \strokec4  \{\cb1 \
\cb3 \'a0\'a0  \cf5 \strokec5 // Some server error\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0  res.writeHead(\cf8 \strokec8 500\cf4 \strokec4 );\cb1 \
\cb3 \'a0\'a0  res.end(\cf9 \strokec9 `Server Error; \cf4 \strokec4 $\{err.code\}\cf9 \strokec9 `\cf4 \strokec4 );\cb1 \
\cb3 \'a0\'a0\}\cb1 \
\cb3       \} \cf7 \strokec7 else\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 // Success\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0res.writeHead(\cf8 \strokec8 200\cf4 \strokec4 , \{ \cf6 \strokec6 \'91\cf2 \strokec2 Content\cf4 \strokec4 -\cf2 \strokec2 Type\cf6 \strokec6 \'92\cf4 \strokec4 : \cf4 \cb10 \strokec6 contentType\cf4 \cb3 \strokec4  \});\cb1 \
\cb3 \'a0\'a0res.end(content, \cf6 \strokec6 \'91\cf4 \strokec4 utf8\cf6 \strokec6 \'92\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\cb3 \});\cb1 \
\
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf2 \strokec2 PORT\cf4 \strokec4  = process.env.\cf2 \strokec2 PORT\cf4 \strokec4  || \cf8 \strokec8 5000\cf4 \strokec4 ;\cb1 \
\
\cb3 server.listen(\cf2 \strokec2 PORT\cf4 \strokec4 , () => console.log(\cf9 \strokec9 `Server running on port \cf4 \strokec4 $\{\cf2 \strokec2 PORT\cf4 \strokec4 \}\cf9 \strokec9 `\cf4 \strokec4 ));\cb1 \
}