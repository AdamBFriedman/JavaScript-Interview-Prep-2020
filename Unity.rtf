{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red0\green0\blue255;\red0\green0\blue255;
\red255\green255\blue254;\red0\green0\blue0;\red154\green154\blue154;\red255\green255\blue254;}
{\*\expandedcolortbl;;\cssrgb\c1680\c19835\c100000;\cssrgb\c1680\c19835\c100000;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;\cssrgb\c66667\c66667\c66667;\cssrgb\c100000\c100000\c99608;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Unity Notes\
\
\cf2 // Unity Hub\cf0 \
The hub allows you to manage different versions of Unity\
\
\cf2 // Create New Project\cf0 \
1. Open Unity Hub\
2. Click on New\
3. Choose project (2D, 3D, 3D with extras, High-Def RP, Lightweight RP, VR Lightweight RP)\
4. Name your project\
5. Choose your file path\
6. Click create\
\
Your project is now open including your \'93scene view\'94\
\
Top left is a tab that\'92s called Hierarchy.  This is where the objects of your scene will go.\
	Hierarchy\
		Sample Scene\
			Main Camera\
			Directional Light\
If you click an object under Hierarchy, the Inspector screen will show your objections properties on the right.  Any thing that you can show/hide under Inspector are components for your object.\
\
Bottom Left is a tab called Project.  This is where you keep the files that make up your object.\
	Assets\
		Scenes\
	Packages\
\
\cf2 // Run Game\cf0 \
Click the Game tab and then click the play button\
\
\cf2 // Asset\cf0 \
An Asset is an object of any sort (image, 3d model, sound, etc.) - anything you put in your scene or project view\
\
\cf2 // Tabs can be moved\cf0 \
You can move any tab to fit your preferences.  Once you like what you see, you can save the layout in the top right corner\
\
\cf2 // Creating Primitive Objects\cf0 \
A primitive object is any 3d or 2d shape that doesn\'92t need any additional 3d modeling to be made.  Cube is a primitive object. A fidget spinner is not a primitive object.\
\
1. Under Hierarchy, click the Create dropdown list\
2. Choose what you want ie 3D Object - Cube (a cube will show up in your scene)\
\
\cf2 // Transform object\cf0 \
1. Click the cube object and the Inspector will come up.  Under Transform, click the gear icon and then reset the position (the cube will go away)\
2. Type the \'93f\'94 key to focus on the cube\
\
\cf2 // Plane\cf0 \
A 2D square where light shines on the top and the bottom is transparent\
\
\cf2 // Scale Plane\cf0 \
Top left hand side will have editor tools:\
	1. Hand tool - lets you move the entire object around\
	2. Move tool - Move an object by its y-axis, x-axis, or both\
	3. Rotate tool - lets you rotate your object\
	4. Scale tool - Scale on every axis or single axis\
\
\cf3 // Colliders and Rigidbodies\cf0 \
- If you click on an object and look in Inspector, you will see a box collider section.  The green line on your object is your box collider\
- The collider will either be a trigger or not a trigger\
- There are 13 colliders\
- A collider is useless without a rigidbody\
\
\cf3 // Create rigidbody\cf0 \
1. Click your object\
2. In Inspector, click \'93Add component\'94\
3. Search for rigidbody and it will appear under your collider in Inspection\
** This is where physics comes into play\
\
\cf3 // Kinematic\cf0 \
In your rigidbody - if you click Is Kinematic, that object will no longer be affected by physics\
\
\cf3 // Mesh Collider\cf0 \
Draws the boundaries around the object itself\
\
\cf3 // Variables in C#\cf0 \
	int \'97> whole number\
	float \'97> decimal number\
	string \'97> text\
	bool \'97> true or false\
\
\cf3 // Create Prefab of Object\cf0 \
Prefabs are used when you want multiple objects of the same type\
Drag the object to your Assets folder\
\
\cf3 // Configure How Objects Snap to Grid\cf0 \
1. Go to Edit \'97> Snap Settings\
2. Change your settings\
\
\cf3 // Drag\cf0 \
Drag is air resistance.  The higher the drag, the quicker it will be stopped by air.  \
This means we will need to increase our Forward Force\
\
\cf3 // Lighting\cf0 \
Go to Window and select Lighting\
\
\cf2 // Change player position in C#\cf0 \
\pard\pardeftab720\sl420\partightenfactor0

\f1 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 using\cf6 \strokec6  UnityEngine;\cb1 \
\
\cf4 \cb5 \strokec4 public\cf6 \strokec6  \cf4 \strokec4 class\cf6 \strokec6  Player : MonoBehaviour\cb1 \
\cb5 \{\cb1 \
\cb5   \cf4 \strokec4 public\cf6 \strokec6  Vector3 startPosition;\cb1 \
\
\cb5   \cf4 \strokec4 void\cf6 \strokec6  Start ()\cb1 \
\cb5   \{\cb1 \
\cb5 \'a0\'a0\cf7 \strokec7 // Grab the current position and then use = to assign a new position\cf6 \cb1 \strokec6 \
\cb5 \'a0\'a0transform.position = startPosition;\cb1 \
\cb5   \}\cb1 \
\cb5 \}
\fs28 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\cf2 // User Input in C#
\f1 \cf6 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl420\partightenfactor0
\cf6 // When space key is pressed down\
\cf4 \cb8 if (Input.GetKeyDown(KeyCode.Space))\cf6 \cb1 \
\cb8 \{\cb1 \
\cb8   Debug.Log(\'93Space Key Pressed\'94);\cb1 \
\cb8 \}\
\
// When e key is held down\
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb8 if (Input.GetKey(KeyCode.E))\cf6 \cb1 \
\cb8 \{\cb1 \
\cb8   Debug.Log(\'93E Key Pressed\'94);\cb1 \
\cb8 \}\
\
// When f key is lifted up\
\cf4 if (Input.GetKeyUp(KeyCode.F))\cf6 \cb1 \
\cb8 \{\cb1 \
\cb8   Debug.Log(\'93F Key Pressed\'94);\cb1 \
\cb8 \}
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
}