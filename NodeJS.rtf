{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Node JS Cheat Sheet\
\
//CommonJS\
Node doesn\'92t use es6, it uses commonJS so you need to use require as opposed to import\
\
//Path\
const path = require (\'91path\'92)\
\
// Base file name\
console.log(path.basename(__filename));\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 // Directory name\
console.log(path.dirname(__filename));\
\
// File extension\
console.log(path.extname(__filename));\
\
// Create path object\
console.log(path.parse(__filename));\
\
// Concatenate paths\
console.log(path.join(__dirname, \'91test\'92, \'91hello.html\'92))\
\
//FS\
const fs = require (\'91fs\'92);\
const path = require (\'91path\'92);\
\
// Create folder (mkdir(path, options, callback)\
fs.mkdir(path.join(__dirname, \'91/test\'92), \{\}, err => \{\
    If (err) throw err;\
    console.log(\'91Folder create\'85\'92);\
\});\
\
// Create and write to file (writeFile overwrites anything written in file)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 fs.writeFile(path.join(__dirname, \'91/test\'92, \'91hello.txt\'92), \'91Hello World\'92, err => \{\
    If (err) throw err;\
    console.log(\'91File written to\'85\'92);\
\});\
\
// Create and write to file then append more text\
fs.writeFile(path.join(__dirname, \'91/test\'92, \'91hello.txt\'92), \'91Hello World\'92, err => \{\
    If (err) throw err;\
    console.log(\'91File written to\'85\'92);\
    //Append file\
    fs.appendFile(path.join(__dirname, \'91/test\'92, \'91hello.txt\'92), \'91More text added\'92, err => \{\
    If (err) throw err;\
    console.log(\'91File written to\'85\'92);\
\});\
\});\
\
// Read file \
fs.readFile(path.join(__dirname, \'91/test\'92, \'91hello.txt\'92), \'91utf8\'92, (err, data) => \{\
    If (err) throw err;\
    console.log(data);\
\});\
\
// Rename file \
fs.rename(path.join(__dirname, \'91/test\'92, \'91hello.txt\'92), (path.join(__dirname, \'91/test\'92, \'91newName.txt\'92), err => \{\
    If (err) throw err;\
    console.log(\'91File renamed\'85\'92);\
\});\
\
// Operating System (OS)\
const os = require(\'91os\'92);\
\
// Platform\
console.log(os.platform());\
\
// CPU Arch\
console.log(os.arch());\
\
// CPU Core Info\
console.log(os.cpus());\
\
// Free memory\
console.log(os.freemem());\
\
// Total memory\
console.log(os.totalmem());\
\
// Home dir\
console.log(os.homedir());\
\
// Uptime\
console.log(os.uptime());\
\
// URL\
const url = require(\'91url\'92);\
const myUrl = new URL(\'91http://mywebsite.com/hello.html?id=100&status=active\'92);\
\
// Serialized URL\
console.log(myUrl.href);\
\
// Host (root domain)\
console.log(myUrl.host);\
\
// Hostname (doesn\'92t include ports)\
console.log(myUrl.hostname);\
\
// Pathname\
console.log(myUrl.pathname);\
\
// Serialized query\
console.log(myUrl.search);\
\
// Params object\
console.log(myUrl.searchParams);\
\
// Add param\
myUrl.searchParams.append(\'91abc\'92, \'91123\'92);\
console.log(myUrl.searchParams);\
\
// Loop through params\
myUrl.searchParams.forEach((value, name) console.log(`$\{name\}: $\{value\}`));\
\
//Event Emitter\
const EventEmitter = require(\'91events\'92);\
\
// Create class\
class MyEmitter extends EventEmitter \{ \}\
\
// Init object\
const myEmitter = new MyEmitter();\
\
// Event listener\
myEmitter.on(\'91event\'92, () => console.log(\'91Event Fired!\'92);\
\
// Init event\
myEmitter.emit(\'91event\'92);\
\
// Real example of EventEmitter\
const EventEmitter = require(\'91events\'92);\
const uuid = require(\'91uuid\'92);\
\
class Logger extends EventEmitter \{\
    log(msg) \{\
      // Call event\
      this.emit(\'91message\'92, \{ id: uuid.v4(), msg \}\
    \}\
\}\
\
module.exports = Logger;\
\
// in index.js\
const Logger = require(\'91./logger\'92);\
const logger = new Logger();\
logger.on(\'91message\'92, data => console.log(\'91Called Listener\'92, data));\
logger.log(\'91Hello World\'92);\
\
// Create simple server\
const http = require(\'91http\'92);\
\
// Create server object\
http.createServer((req, res) => \{\
    // Write response\
    res.write(\'91Hello World\'92);\
    res.end();\
\}).listen(5000, () => console.log(\'91Server running\'85\'92));\
\
// Create real server\
const http = require(\'91http\'92);\
const path = require(\'91path\'92);\
const fs = require(\'91fs\'92);\
\
const server = http.createServer((req, res) => \{\
    if (req.url === \'91/\'91) \{\
      fs.readFile(\
	path.join(__dirname, \'91public\'92, \'91index.html\'92),\
	(err, content) => \{\
	  if (err) throw err;\
	  res.writeHead(200, \{ \'91Content-Type\'92: \'91text/html\'92 \});\
	  res.end(content);\
	\}\
      );\
    \}\
\
    if (req.url === \'91/about\'91) \{\
      fs.readFile(\
	path.join(__dirname, \'91public\'92, \'91about\'92),\
	(err, content) => \{\
	  if (err) throw err;\
	  res.writeHead(200, \{ \'91Content-Type\'92: \'91text/html\'92 \});\
	  res.end(content);\
	\}\
      );\
    \}\
\
// Serve JSON data instead of HTML\
    if (req.url === \'91/api/users\'91) \{\
      const users = [\
	\{ name: \'91Bob Smith\'92, age: 40 \},\
           \{ name: \'91John Doe\'92, age: 30 \}\
      ];\
	res.writeHead(200, \{ \'91Content-Type\'92: \'91application/json\'92 \});\
	res.end(JSON.stringify(users));\
    \}\
\});\
\
const PORT = process.env.PORT || 5000;\
\
server.listen(PORT, () => console.log(`Server running on port $\{PORT\}`));}