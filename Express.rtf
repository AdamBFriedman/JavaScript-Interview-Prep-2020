{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Express Notes\
\
// Basic server syntax\
const express = require(\'91express\'92);\
\
// Init express\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 const app = express();\
\
// Create your endpoints/route handlers\
app.get(\'91/\'91, (req, res) => \{\
  res.send(\'91Hello World!\'92);\
\});\
\
// Create port\
const PORT = process.env.PORT || 5000\
\
// Listen on a port\
app.listen(PORT, () => console.log(`Server started on port $\{PORT\}`));\
\
// Middleware\
Middleware functions are functions that have access to the request and response object.  Express has built in middleware but middleware also comes from 3rd party packages/custom made\
\
// Setting up environment\
\
1.  Open up project folder in code editor\
2.  Open terminal\
3.  Run \'93npm init\'94 to create a package.json file\
4.  Run \'93npm install express\'94\
5.  Create main entry point file (index.js or app.js or server.js)\
6.  Add server syntax (from above) to index.js\
\
// Send a single html file (res.sendFile)\
const express = require(\'91Express\'92);\
const path = require(\'91path\'92);\
\
const app = express();\
\
app.get(\'91/\'91, (req, res) => \{\
  res.sendFile(path.join(__dirname, \'91public\'92, \'91index.html\'92));\
\});\
\
// Set static folder using middleware (app.use)\
app.use(express.static(path.join(__dirname, \'91public\'92)));\
\
}